<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>$.ajax Demo</title>
    <link rel="stylesheet" href="css/bootstrap.min.css">
    <link rel="stylesheet" href="css/bootstrap-theme.min.css">
    <link rel="stylesheet" href="css/main.css">
    <script src="js/jquery-1.11.3.js"></script>
</head>
<body>
<h3>$.ajax 两种使用方式</h3>

<p>$.ajax(url, [settings])</p>

<p>$.ajax(settings)，此时url是settings中的一个属性</p>
<hr/>
<h3>处理响应结果的回调函数 success、error、complete</h3>
<hr/>
<h3>前置处理：beforeSend</h3>
<hr/>
<h3>请求类型: type</h3>
<hr/>
<h3>请求数据: data, processData, contentType</h3>
<h3>响应数据：dataType、dataFilter</h3>
<button class="btn btn-primary  btn-sm" onclick="test();">TEST</button>

<script>
    function test() {
        // basicUsage();
         callbacksUsage();
        // testBeforeSend();

    }

    function basicUsage() {
        $.ajax('/test');
        $.ajax({url: '/test'});
    }

    function callbacksUsage() {
        $.ajax('/user/allusers', {
            processData: false,
            data: JSON.stringify({a:1}),
            contentType: 'application/json',
            type: 'PUT',
            success: function (data) {
                console.log(arguments);
                console.log(typeof data);
                console.log('success: %o', data);
            },

            error: function (jqXHR, textStatus, err) {
                // jqXHR: jQuery增强的xhr
                // textStatus: 请求完成状态 一定是 error
                // err: 底层通过throw抛出的异常对象，类型与值与错误类型有关
                console.log(arguments);
            },
            complete: function (jqXHR, textStatus) {
                // jqXHR: jQuery增强的xhr
                // textStatus: 请求完成状态 success | error
                console.log('statusCode: %d, statusText: %s', jqXHR.status, jqXHR.statusText);
                console.log('textStatus: %s', textStatus);
            }
        });
    }

    function testBeforeSend() {
        $.ajax('/user/allusers', {
            beforeSend: function (jqXHR, settings) {
                console.log(arguments);
                console.log('beforeSend');
                jqXHR.setRequestHeader('test', 'haha');
                jqXHR.testData = {a: 1, b: 2};
            },

            complete: function (xhr) {
                console.log(xhr.testData);
            }
        })
    }
</script>
</body>
</html>